services:
  arg_production_filter:
    build:
      context: .
      dockerfile: filters/arg_production/arg_production_filter.dockerfile
    container_name: arg_production_filter_1
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=arg_production_filter_1
    image: arg_production_filter:latest
    links:
    - rabbitmq
  arg_production_filter_2:
    container_name: arg_production_filter_2
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=arg_production_filter_2
    image: arg_production_filter:latest
    links:
    - rabbitmq
  best_and_worst_ratings_aggregator:
    build:
      context: .
      dockerfile: aggregator/best_and_worst_ratings_aggregator/aggregator.dockerfile
    container_name: best_and_worst_ratings_aggregator
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=best_and_worst_ratings_aggregator
    links:
    - rabbitmq
    ports:
    - 60002:60002
  client_1:
    build:
      context: .
      dockerfile: client/client.dockerfile
    container_name: client_1
    depends_on:
      client_decodifier:
        condition: service_healthy
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - DECODIFIER_HOST=client_decodifier
    - DECODIFIER_PORT=50000
    - CLIENT_ID=1
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=client_1
    volumes:
    - ./files/long/movies_metadata.csv:/root/files/movies_metadata.csv
    - ./files/long/credits.csv:/root/files/credits.csv
    - ./files/long/ratings.csv:/root/files/ratings.csv
    - ./results/long/results.json:/root/results/results.json
  client_2:
    build:
      context: .
      dockerfile: client/client.dockerfile
    container_name: client_2
    depends_on:
      client_decodifier:
        condition: service_healthy
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - DECODIFIER_HOST=client_decodifier
    - DECODIFIER_PORT=50000
    - CLIENT_ID=2
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=client_2
    volumes:
    - ./files/short/movies_metadata.csv:/root/files/movies_metadata.csv
    - ./files/short/credits.csv:/root/files/credits.csv
    - ./files/short/ratings.csv:/root/files/ratings.csv
    - ./results/short/results.json:/root/results/results.json
  client_3:
    build:
      context: .
      dockerfile: client/client.dockerfile
    container_name: client_3
    depends_on:
      client_decodifier:
        condition: service_healthy
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - DECODIFIER_HOST=client_decodifier
    - DECODIFIER_PORT=50000
    - CLIENT_ID=3
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=client_3
    volumes:
    - ./files/short/movies_metadata.csv:/root/files/movies_metadata.csv
    - ./files/short/credits.csv:/root/files/credits.csv
    - ./files/short/ratings.csv:/root/files/ratings.csv
    - ./results/short/results.json:/root/results/results.json
  client_decodifier:
    build:
      context: .
      dockerfile: client_decodifier/client_decodifier.dockerfile
    container_name: client_decodifier
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=client_decodifier
    healthcheck:
      interval: 5s
      retries: 50
      test: netstat -ltn | grep -c 5000
      timeout: 2s
    ports:
    - 50000:50000
  credits_joiner:
    build:
      context: .
      dockerfile: joiner/credits/credits_joiner.dockerfile
    container_name: credits_joiner_1
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - JOINER_INSTANCE_ID=credits-1
    - AGGREGATOR_HOST=top_10_credits_aggregator
    - AGGREGATOR_PORT=60000
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=credits_joiner_1
    image: credits_joiner:latest
    links:
    - rabbitmq
  credits_joiner_2:
    container_name: credits_joiner_2
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - JOINER_INSTANCE_ID=credits-3
    - AGGREGATOR_HOST=top_10_credits_aggregator
    - AGGREGATOR_PORT=60000
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=credits_joiner_2
    image: credits_joiner:latest
    links:
    - rabbitmq
  esp_production_filter:
    build:
      context: .
      dockerfile: filters/esp_production/esp_production_filter.dockerfile
    container_name: esp_production_filter_1
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=esp_production_filter_1
    image: esp_production_filter:latest
    links:
    - rabbitmq
  esp_production_filter_2:
    container_name: esp_production_filter_2
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=esp_production_filter_2
    image: esp_production_filter:latest
    links:
    - rabbitmq
  main_movie_filter:
    build:
      context: .
      dockerfile: filters/main_movie_filter/main_movie_filter.dockerfile
    container_name: main_movie_filter_1
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=DEBUG
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=main_movie_filter_1
    image: main_movie_filter:latest
    links:
    - rabbitmq
  main_movie_filter_2:
    container_name: main_movie_filter_2
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=DEBUG
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=main_movie_filter_2
    image: main_movie_filter:latest
    links:
    - rabbitmq
  monitor_1:
    build:
      context: .
      dockerfile: monitor/monitor_cluster.dockerfile
    container_name: monitor_1
    environment:
    - PYTHONUNBUFFERED=1
    - MONITOR_SERVICE_PORT=50001
    - MONITOR_CLUSTER_PORT=50011
    - HEARTBEAT_INTERVAL=100
    - HEARTBEAT_TIMEOUT=3000
    - ELECTION_TIMEOUT=1000
    - MONITOR_NODE_ID=1
    - MONITOR_CLUSTER_NODES=monitor_1,monitor_2,monitor_3
    - EXPECTED_SERVICES=worker,client_decodifier,client_1,client_2,client_3,twentieth_century_filter_1,twentieth_century_filter_2,arg_production_filter_1,arg_production_filter_2,credits_joiner_1,credits_joiner_2,ratings_joiner_1,ratings_joiner_2,main_movie_filter_1,main_movie_filter_2,esp_production_filter_1,esp_production_filter_2,no_colab_productions_filter_1,no_colab_productions_filter_2,twentieth_century_arg_esp_aggregator,twentieth_century_arg_aggregator,top_5_countries_aggregator,top_10_credits_aggregator,best_and_worst_ratings_aggregator
    ports:
    - 50001:50001
    - 50011:50011
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  monitor_2:
    build:
      context: .
      dockerfile: monitor/monitor_cluster.dockerfile
    container_name: monitor_2
    environment:
    - PYTHONUNBUFFERED=1
    - MONITOR_SERVICE_PORT=50002
    - MONITOR_CLUSTER_PORT=50012
    - HEARTBEAT_INTERVAL=100
    - HEARTBEAT_TIMEOUT=3000
    - ELECTION_TIMEOUT=1000
    - MONITOR_NODE_ID=2
    - MONITOR_CLUSTER_NODES=monitor_1,monitor_2,monitor_3
    - EXPECTED_SERVICES=worker,client_decodifier,client_1,client_2,client_3,twentieth_century_filter_1,twentieth_century_filter_2,arg_production_filter_1,arg_production_filter_2,credits_joiner_1,credits_joiner_2,ratings_joiner_1,ratings_joiner_2,main_movie_filter_1,main_movie_filter_2,esp_production_filter_1,esp_production_filter_2,no_colab_productions_filter_1,no_colab_productions_filter_2,twentieth_century_arg_esp_aggregator,twentieth_century_arg_aggregator,top_5_countries_aggregator,top_10_credits_aggregator,best_and_worst_ratings_aggregator
    ports:
    - 50002:50002
    - 50012:50012
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  monitor_3:
    build:
      context: .
      dockerfile: monitor/monitor_cluster.dockerfile
    container_name: monitor_3
    environment:
    - PYTHONUNBUFFERED=1
    - MONITOR_SERVICE_PORT=50003
    - MONITOR_CLUSTER_PORT=50013
    - HEARTBEAT_INTERVAL=100
    - HEARTBEAT_TIMEOUT=3000
    - ELECTION_TIMEOUT=1000
    - MONITOR_NODE_ID=3
    - MONITOR_CLUSTER_NODES=monitor_1,monitor_2,monitor_3
    - EXPECTED_SERVICES=worker,client_decodifier,client_1,client_2,client_3,twentieth_century_filter_1,twentieth_century_filter_2,arg_production_filter_1,arg_production_filter_2,credits_joiner_1,credits_joiner_2,ratings_joiner_1,ratings_joiner_2,main_movie_filter_1,main_movie_filter_2,esp_production_filter_1,esp_production_filter_2,no_colab_productions_filter_1,no_colab_productions_filter_2,twentieth_century_arg_esp_aggregator,twentieth_century_arg_aggregator,top_5_countries_aggregator,top_10_credits_aggregator,best_and_worst_ratings_aggregator
    ports:
    - 50003:50003
    - 50013:50013
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  no_colab_productions_filter:
    build:
      context: .
      dockerfile: filters/no_colab_productions/no_colab_productions_filter.dockerfile
    container_name: no_colab_productions_filter_1
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=no_colab_productions_filter_1
    image: no_colab_productions_filter:latest
    links:
    - rabbitmq
  no_colab_productions_filter_2:
    container_name: no_colab_productions_filter_2
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=no_colab_productions_filter_2
    image: no_colab_productions_filter:latest
    links:
    - rabbitmq
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    healthcheck:
      interval: 5s
      retries: 50
      test: rabbitmq-diagnostics check_port_connectivity
      timeout: 1s
    ports:
    - 15672:15672
    volumes:
    - ./rabbitmq/config.ini:/config.ini
  ratings_joiner:
    build:
      context: .
      dockerfile: joiner/ratings/ratings_joiner.dockerfile
    container_name: ratings_joiner_1
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - JOINER_INSTANCE_ID=ratings-1
    - AGGREGATOR_HOST=best_and_worst_ratings_aggregator
    - AGGREGATOR_PORT=60002
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=ratings_joiner_1
    image: ratings_joiner:latest
    links:
    - rabbitmq
  ratings_joiner_2:
    container_name: ratings_joiner_2
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - JOINER_INSTANCE_ID=ratings-3
    - AGGREGATOR_HOST=best_and_worst_ratings_aggregator
    - AGGREGATOR_PORT=60002
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=ratings_joiner_2
    image: ratings_joiner:latest
    links:
    - rabbitmq
  top_10_credits_aggregator:
    build:
      context: .
      dockerfile: aggregator/top_10_credits_aggregator/aggregator.dockerfile
    container_name: top_10_credits_aggregator
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=top_10_credits_aggregator
    links:
    - rabbitmq
    ports:
    - 60000:60000
  top_5_countries_aggregator:
    build:
      context: .
      dockerfile: aggregator/top_aggregator/aggregator.dockerfile
    container_name: top_5_countries_aggregator
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=top_5_countries_aggregator
    links:
    - rabbitmq
  twentieth_century_arg_aggregator:
    build:
      context: .
      dockerfile: aggregator/twentieth_century_arg_aggregator/aggregator.dockerfile
    container_name: twentieth_century_arg_aggregator
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=twentieth_century_arg_aggregator
    links:
    - rabbitmq
  twentieth_century_arg_esp_aggregator:
    build:
      context: .
      dockerfile: aggregator/twentieth_century_arg_esp_aggregator/aggregator.dockerfile
    container_name: twentieth_century_arg_esp_aggregator
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=twentieth_century_arg_esp_aggregator
    links:
    - rabbitmq
  twentieth_century_filter:
    build:
      context: .
      dockerfile: filters/twentieth_century/twentieth_century_filter.dockerfile
    container_name: twentieth_century_filter_1
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=twentieth_century_filter_1
    image: twentieth_century_filter:latest
    links:
    - rabbitmq
  twentieth_century_filter_2:
    container_name: twentieth_century_filter_2
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=twentieth_century_filter_2
    image: twentieth_century_filter:latest
    links:
    - rabbitmq
  worker:
    build:
      context: .
      dockerfile: worker/worker.dockerfile
    depends_on:
      monitor_1:
        condition: service_started
      monitor_2:
        condition: service_started
      monitor_3:
        condition: service_started
    environment:
    - MONITOR_HOSTS=monitor_1,monitor_2,monitor_3
    - MONITOR_PORTS=50001,50002,50003
    - HEARTBEAT_INTERVAL=100
    - SERVICE_NAME=worker
    image: worker:latest
