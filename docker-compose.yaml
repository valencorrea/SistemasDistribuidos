services:
  arg_production_filter:
    build:
      context: .
      dockerfile: filters/arg_production/arg_production_filter.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=arg_production_filter
    image: arg_production_filter:latest
    links:
    - rabbitmq
  best_and_worst_ratings_aggregator:
    build:
      context: .
      dockerfile: aggregator/best_and_worst_ratings_aggregator/aggregator.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=best_and_worst_ratings_aggregator
    links:
    - rabbitmq
  client_1:
    build:
      context: .
      dockerfile: client/client.dockerfile
    container_name: client_1
    depends_on:
      client_decodifier:
        condition: service_healthy
      monitor:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - DECODIFIER_HOST=client_decodifier
    - DECODIFIER_PORT=50000
    - CLIENT_ID=1
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=client_1
    volumes:
    - ./files/short/movies_metadata.csv:/root/files/movies_metadata.csv
    - ./files/short/credits.csv:/root/files/credits.csv
    - ./files/short/ratings.csv:/root/files/ratings.csv
    - ./results/short/results.json:/root/results/results.json
  client_decodifier:
    build:
      context: .
      dockerfile: client_decodifier/client_decodifier.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=client_decodifier
    healthcheck:
      interval: 5s
      retries: 10
      test: netstat -ltn | grep -c 5000
      timeout: 2s
    ports:
    - 50000:50000
  credits_joiner:
    build:
      context: .
      dockerfile: joiner/credits/credits_joiner.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=credits_joiner
    image: credits_joiner:latest
    links:
    - rabbitmq
  esp_production_filter:
    build:
      context: .
      dockerfile: filters/esp_production/esp_production_filter.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=esp_production_filter
    image: esp_production_filter:latest
    links:
    - rabbitmq
  main_movie_filter:
    build:
      context: .
      dockerfile: filters/main_movie_filter/main_movie_filter.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=main_movie_filter
    image: main_movie_filter:latest
    links:
    - rabbitmq
  monitor:
    build:
      context: .
      dockerfile: monitor/monitor.dockerfile
    environment:
    - PYTHONUNBUFFERED=1
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - HEARTBEAT_TIMEOUT=15000
    ports:
    - 50001:50001
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  no_colab_productions_filter:
    build:
      context: .
      dockerfile: filters/no_colab_productions/no_colab_productions_filter.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=no_colab_productions_filter
    image: no_colab_productions_filter:latest
    links:
    - rabbitmq
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    healthcheck:
      interval: 10s
      retries: 10
      test: rabbitmq-diagnostics check_port_connectivity
      timeout: 5s
    ports:
    - 15672:15672
    volumes:
    - ./rabbitmq/config.ini:/config.ini
  ratings_joiner:
    build:
      context: .
      dockerfile: joiner/ratings/ratings_joiner.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=ratings_joiner
    image: ratings_joiner:latest
    links:
    - rabbitmq
  sentiment_aggregator:
    build:
      context: .
      dockerfile: aggregator/sentiment_aggregator/aggregator.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=sentiment_aggregator
    links:
    - rabbitmq
  sentiment_filter:
    build:
      context: .
      dockerfile: filters/sentiment_analizer/sentiment_analizer.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=sentiment_filter
    image: sentiment_filter:latest
    links:
    - rabbitmq
  top_10_credits_aggregator:
    build:
      context: .
      dockerfile: aggregator/top_10_credits_aggregator/aggregator.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=top_10_credits_aggregator
    links:
    - rabbitmq
  top_5_countries_aggregator:
    build:
      context: .
      dockerfile: aggregator/top_aggregator/aggregator.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=top_5_countries_aggregator
    links:
    - rabbitmq
  twentieth_century_arg_aggregator:
    build:
      context: .
      dockerfile: aggregator/twentieth_century_arg_aggregator/aggregator.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=twentieth_century_arg_aggregator
    links:
    - rabbitmq
  twentieth_century_arg_esp_aggregator:
    build:
      context: .
      dockerfile: aggregator/twentieth_century_arg_esp_aggregator/aggregator.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=twentieth_century_arg_esp_aggregator
    links:
    - rabbitmq
  twentieth_century_filter:
    build:
      context: .
      dockerfile: filters/twentieth_century/twentieth_century_filter.dockerfile
    depends_on:
      monitor:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - LOG_LEVEL=INFO
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=twentieth_century_filter
    image: twentieth_century_filter:latest
    links:
    - rabbitmq
  worker:
    build:
      context: .
      dockerfile: worker/worker.dockerfile
    depends_on:
      monitor:
        condition: service_started
    environment:
    - MONITOR_HOST=monitor
    - MONITOR_PORT=50001
    - HEARTBEAT_INTERVAL=5000
    - SERVICE_NAME=worker
    image: worker:latest
